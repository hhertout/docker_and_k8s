apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Values.tempo.volume.config.configMap}}
  labels:
    app: {{.Values.tempo.name}}
data:
  tempo.yaml: |
    stream_over_http_enabled: true

    server:
      http_listen_port: 3200
      log_level: info

    distributor:
      receivers:
        jaeger: 
          protocols: 
            thrift_http:
            grpc: 
            thrift_binary: 
            thrift_compact:
        otlp:
          protocols:
            http:
            grpc: 
        zipkin:


    ingester:
      trace_idle_period: 10s # The length of time after a trace has not received spans to consider it complete and flush it.
      max_block_bytes: 1_000_000 # Cut the head block when it hits this size or
      max_block_duration: 5m # this much time passes

    compactor:
      compaction:
        compaction_window: 1h # Blocks in this time window will be compacted together.
        max_block_bytes: 100_000_000 # Maximum size of a compacted block.
        block_retention: 1h # How long to keep blocks. Default is 14 days, this demo system is short-lived.
        compacted_block_retention: 10m # How long to keep compacted blocks stored elsewhere.

    storage:
      trace:
        backend: local
        block:
          bloom_filter_false_positive: .05 
        wal:
          path: /tmp/tempo/wal
        local:
          path: /tmp/tempo/blocks
        pool:
          max_workers: 100
          queue_depth: 10000

    metrics_generator:
      processor:
        span_metrics:
          dimensions:
            - http.method
            - http.target
            - http.status_code
            - service.version
        service_graphs:
          dimensions:
            - http.method
            - http.target
            - http.status_code
            - service.version
        local_blocks:
          flush_to_storage: true
      registry:
        collection_interval: 5s # Create new metrics every 5s.
        external_labels:
          source: tempo # Add a `{source="tempo"}` label.
          group: "mythical" # Add a `{group="mythical"}` label.
      storage:
        path: /tmp/tempo/generator/wal
        remote_write:
          - url: http://mimir:9009/api/v1/push # URL of locally running Mimir instance.
            send_exemplars: true # Send exemplars along with their metrics.
      traces_storage:
        path: /tmp/tempo/generator/traces


    overrides:
      metrics_generator_processors: ["service-graphs","span-metrics","local-blocks"]
