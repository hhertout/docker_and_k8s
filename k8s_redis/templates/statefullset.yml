apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Values.name}}
spec:
  serviceName: {{.Values.name}}
  replicas: 6
  selector:
    matchLabels:
      app: {{.Values.name}}
  template:
    metadata:
      labels:
        app: {{.Values.name}}
    spec:
      containers:
        - name: {{.Values.name}}
          image: {{.Values.image}}
          command: ["redis-server", "/data/redis.conf"]
          ports:
            - containerPort: {{.Values.port}}
              name: {{.Values.name}}
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "200Mi"
              cpu: "200m"
          livenessProbe:
            tcpSocket:
              port: {{.Values.port}}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: {{.Values.port}}
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /data/redis.conf
              subPath: redis.conf
      volumes:
        - name: config
          configMap:
            name: {{.Values.name}}-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Mi
